{
  "version": 3,
  "sources": ["../../@studio-freight/lenis/src/maths.js", "../../@studio-freight/lenis/src/animate.js", "../../@studio-freight/lenis/src/dimensions.js", "../../@studio-freight/lenis/src/debounce.js", "../../@studio-freight/lenis/src/emitter.js", "../../@studio-freight/lenis/src/virtual-scroll.js", "../../@studio-freight/lenis/src/index.js"],
  "sourcesContent": ["// Clamp a value between a minimum and maximum value\r\nexport function clamp(min, input, max) {\r\n  return Math.max(min, Math.min(input, max))\r\n}\r\n\r\n// Truncate a floating-point number to a specified number of decimal places\r\nexport function truncate(value, decimals = 0) {\r\n  return parseFloat(value.toFixed(decimals))\r\n}\r\n\r\n// Linearly interpolate between two values using an amount (0 <= t <= 1)\r\nexport function lerp(x, y, t) {\r\n  return (1 - t) * x + t * y\r\n}\r\n\r\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\r\nexport function damp(x, y, lambda, dt) {\r\n  return lerp(x, y, 1 - Math.exp(-lambda * dt))\r\n}\r\n\r\n// Calculate the modulo of the dividend and divisor while keeping the result within the same sign as the divisor\r\n// https://anguscroll.com/just/just-modulo\r\nexport function modulo(n, d) {\r\n  return ((n % d) + d) % d\r\n}\r\n", "import { clamp, damp } from './maths'\r\n\r\n// Animate class to handle value animations with lerping or easing\r\nexport class Animate {\r\n  // Advance the animation by the given delta time\r\n  advance(deltaTime) {\r\n    if (!this.isRunning) return\r\n\r\n    let completed = false\r\n\r\n    if (this.lerp) {\r\n      this.value = damp(this.value, this.to, this.lerp * 60, deltaTime)\r\n      if (Math.round(this.value) === this.to) {\r\n        this.value = this.to\r\n        completed = true\r\n      }\r\n    } else {\r\n      this.currentTime += deltaTime\r\n      const linearProgress = clamp(0, this.currentTime / this.duration, 1)\r\n\r\n      completed = linearProgress >= 1\r\n      const easedProgress = completed ? 1 : this.easing(linearProgress)\r\n      this.value = this.from + (this.to - this.from) * easedProgress\r\n    }\r\n\r\n    // Call the onUpdate callback with the current value and completed status\r\n    this.onUpdate?.(this.value, completed)\r\n\r\n    if (completed) {\r\n      this.stop()\r\n    }\r\n  }\r\n\r\n  // Stop the animation\r\n  stop() {\r\n    this.isRunning = false\r\n  }\r\n\r\n  // Set up the animation from a starting value to an ending value\r\n  // with optional parameters for lerping, duration, easing, and onUpdate callback\r\n  fromTo(\r\n    from,\r\n    to,\r\n    { lerp = 0.1, duration = 1, easing = (t) => t, onStart, onUpdate }\r\n  ) {\r\n    this.from = this.value = from\r\n    this.to = to\r\n    this.lerp = lerp\r\n    this.duration = duration\r\n    this.easing = easing\r\n    this.currentTime = 0\r\n    this.isRunning = true\r\n\r\n    onStart?.()\r\n    this.onUpdate = onUpdate\r\n  }\r\n}\r\n", "import { debounce } from './debounce'\r\n\r\nexport class Dimensions {\r\n  constructor({ wrapper, content, autoResize = true } = {}) {\r\n    this.wrapper = wrapper\r\n    this.content = content\r\n\r\n    if (autoResize) {\r\n      const resize = debounce(this.resize, 250)\r\n\r\n      if (this.wrapper !== window) {\r\n        this.wrapperResizeObserver = new ResizeObserver(resize)\r\n        this.wrapperResizeObserver.observe(this.wrapper)\r\n      }\r\n\r\n      this.contentResizeObserver = new ResizeObserver(resize)\r\n      this.contentResizeObserver.observe(this.content)\r\n    }\r\n\r\n    this.resize()\r\n  }\r\n\r\n  destroy() {\r\n    this.wrapperResizeObserver?.disconnect()\r\n    this.contentResizeObserver?.disconnect()\r\n  }\r\n\r\n  resize = () => {\r\n    this.onWrapperResize()\r\n    this.onContentResize()\r\n  }\r\n\r\n  onWrapperResize = () => {\r\n    if (this.wrapper === window) {\r\n      this.width = window.innerWidth\r\n      this.height = window.innerHeight\r\n    } else {\r\n      this.width = this.wrapper.clientWidth\r\n      this.height = this.wrapper.clientHeight\r\n    }\r\n  }\r\n\r\n  onContentResize = () => {\r\n    this.scrollHeight = this.content.scrollHeight\r\n    this.scrollWidth = this.content.scrollWidth\r\n  }\r\n\r\n  get limit() {\r\n    return {\r\n      x: this.scrollWidth - this.width,\r\n      y: this.scrollHeight - this.height,\r\n    }\r\n  }\r\n}\r\n", "export function debounce(callback, delay) {\r\n  let timer\r\n  return function () {\r\n    let args = arguments\r\n    let context = this\r\n    clearTimeout(timer)\r\n    timer = setTimeout(function () {\r\n      callback.apply(context, args)\r\n    }, delay)\r\n  }\r\n}\r\n", "export class Emitter {\r\n  constructor() {\r\n    this.events = {}\r\n  }\r\n\r\n  emit(event, ...args) {\r\n    let callbacks = this.events[event] || []\r\n    for (let i = 0, length = callbacks.length; i < length; i++) {\r\n      callbacks[i](...args)\r\n    }\r\n  }\r\n\r\n  on(event, cb) {\r\n    // Add the callback to the event's callback list, or create a new list with the callback\r\n    this.events[event]?.push(cb) || (this.events[event] = [cb])\r\n\r\n    // Return an unsubscribe function\r\n    return () => {\r\n      this.events[event] = this.events[event]?.filter((i) => cb !== i)\r\n    }\r\n  }\r\n\r\n  off(event, callback) {\r\n    this.events[event] = this.events[event]?.filter((i) => callback !== i)\r\n  }\r\n\r\n  destroy() {\r\n    this.events = {}\r\n  }\r\n}\r\n", "import { Emitter } from './emitter'\r\nimport { clamp } from './maths'\r\n\r\nexport class VirtualScroll {\r\n  constructor(\r\n    element,\r\n    { wheelMultiplier = 1, touchMultiplier = 2, normalizeWheel = false }\r\n  ) {\r\n    this.element = element\r\n    this.wheelMultiplier = wheelMultiplier\r\n    this.touchMultiplier = touchMultiplier\r\n    this.normalizeWheel = normalizeWheel\r\n\r\n    this.touchStart = {\r\n      x: null,\r\n      y: null,\r\n    }\r\n\r\n    this.emitter = new Emitter()\r\n\r\n    this.element.addEventListener('wheel', this.onWheel, { passive: false })\r\n    this.element.addEventListener('touchstart', this.onTouchStart, {\r\n      passive: false,\r\n    })\r\n    this.element.addEventListener('touchmove', this.onTouchMove, {\r\n      passive: false,\r\n    })\r\n    this.element.addEventListener('touchend', this.onTouchEnd, {\r\n      passive: false,\r\n    })\r\n  }\r\n\r\n  // Add an event listener for the given event and callback\r\n  on(event, callback) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  // Remove all event listeners and clean up\r\n  destroy() {\r\n    this.emitter.destroy()\r\n\r\n    this.element.removeEventListener('wheel', this.onWheel, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchstart', this.onTouchStart, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchmove', this.onTouchMove, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchend', this.onTouchEnd, {\r\n      passive: false,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'touchstart' event\r\n  onTouchStart = (event) => {\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: 0,\r\n      y: 0,\r\n    }\r\n  }\r\n\r\n  // Event handler for 'touchmove' event\r\n  onTouchMove = (event) => {\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    const deltaX = -(clientX - this.touchStart.x) * this.touchMultiplier\r\n    const deltaY = -(clientY - this.touchStart.y) * this.touchMultiplier\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: deltaX,\r\n      y: deltaY,\r\n    }\r\n\r\n    this.emitter.emit('scroll', {\r\n      deltaX,\r\n      deltaY,\r\n      event,\r\n    })\r\n  }\r\n\r\n  onTouchEnd = (event) => {\r\n    this.emitter.emit('scroll', {\r\n      deltaX: this.lastDelta.x,\r\n      deltaY: this.lastDelta.y,\r\n      event,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'wheel' event\r\n  onWheel = (event) => {\r\n    let { deltaX, deltaY } = event\r\n\r\n    if (this.normalizeWheel) {\r\n      deltaX = clamp(-100, deltaX, 100)\r\n      deltaY = clamp(-100, deltaY, 100)\r\n    }\r\n\r\n    deltaX *= this.wheelMultiplier\r\n    deltaY *= this.wheelMultiplier\r\n\r\n    this.emitter.emit('scroll', { deltaX, deltaY, event })\r\n  }\r\n}\r\n", "import { version } from '../package.json'\r\nimport { Animate } from './animate'\r\nimport { Dimensions } from './dimensions'\r\nimport { Emitter } from './emitter'\r\nimport { clamp, modulo } from './maths'\r\nimport { VirtualScroll } from './virtual-scroll'\r\n\r\n// Technical explanation\r\n// - listen to 'wheel' events\r\n// - prevent 'wheel' event to prevent scroll\r\n// - normalize wheel delta\r\n// - add delta to targetScroll\r\n// - animate scroll to targetScroll (smooth context)\r\n// - if animation is not running, listen to 'scroll' events (native context)\r\n\r\nexport default class Lenis {\r\n  // isScrolling = true when scroll is animating\r\n  // isStopped = true if user should not be able to scroll - enable/disable programmatically\r\n  // isSmooth = true if scroll should be animated\r\n  // isLocked = same as isStopped but enabled/disabled when scroll reaches target\r\n\r\n  /**\r\n   * @typedef {(t: number) => number} EasingFunction\r\n   * @typedef {'vertical' | 'horizontal'} Orientation\r\n   * @typedef {'vertical' | 'horizontal' | 'both'} GestureOrientation\r\n   *\r\n   * @typedef LenisOptions\r\n   * @property {Window | HTMLElement} [wrapper]\r\n   * @property {HTMLElement} [content]\r\n   * @property {Window | HTMLElement} [wheelEventsTarget] // deprecated\r\n   * @property {Window | HTMLElement} [eventsTarget]\r\n   * @property {boolean} [smoothWheel]\r\n   * @property {boolean} [smoothTouch]\r\n   * @property {boolean} [syncTouch]\r\n   * @property {number} [syncTouchLerp]\r\n   * @property {number} [__iosNoInertiaSyncTouchLerp]\r\n   * @property {number} [touchInertiaMultiplier]\r\n   * @property {number} [duration]\r\n   * @property {EasingFunction} [easing]\r\n   * @property {number} [lerp]\r\n   * @property {boolean} [infinite]\r\n   * @property {Orientation} [orientation]\r\n   * @property {GestureOrientation} [gestureOrientation]\r\n   * @property {number} [touchMultiplier]\r\n   * @property {number} [wheelMultiplier]\r\n   * @property {boolean} [normalizeWheel]\r\n   * @property {boolean} [autoResize]\r\n   *\r\n   * @param {LenisOptions}\r\n   */\r\n  constructor({\r\n    wrapper = window,\r\n    content = document.documentElement,\r\n    wheelEventsTarget = wrapper, // deprecated\r\n    eventsTarget = wheelEventsTarget,\r\n    smoothWheel = true,\r\n    smoothTouch = false,\r\n    syncTouch = false,\r\n    syncTouchLerp = 0.1,\r\n    __iosNoInertiaSyncTouchLerp = 0.4, // should be 1 but had to leave 0.4 for iOS (testing purpose)\r\n    touchInertiaMultiplier = 35,\r\n    duration, // in seconds\r\n    easing = (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\r\n    lerp = !duration && 0.1,\r\n    infinite = false,\r\n    orientation = 'vertical', // vertical, horizontal\r\n    gestureOrientation = 'vertical', // vertical, horizontal, both\r\n    touchMultiplier = 1,\r\n    wheelMultiplier = 1,\r\n    normalizeWheel = false,\r\n    autoResize = true,\r\n  } = {}) {\r\n    window.lenisVersion = version\r\n\r\n    // if wrapper is html or body, fallback to window\r\n    if (wrapper === document.documentElement || wrapper === document.body) {\r\n      wrapper = window\r\n    }\r\n\r\n    this.options = {\r\n      wrapper,\r\n      content,\r\n      wheelEventsTarget,\r\n      eventsTarget,\r\n      smoothWheel,\r\n      smoothTouch,\r\n      syncTouch,\r\n      syncTouchLerp,\r\n      __iosNoInertiaSyncTouchLerp,\r\n      touchInertiaMultiplier,\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      infinite,\r\n      gestureOrientation,\r\n      orientation,\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n      normalizeWheel,\r\n      autoResize,\r\n    }\r\n\r\n    this.animate = new Animate()\r\n    this.emitter = new Emitter()\r\n    this.dimensions = new Dimensions({ wrapper, content, autoResize })\r\n    this.toggleClass('lenis', true)\r\n\r\n    this.velocity = 0\r\n    this.isLocked = false\r\n    this.isStopped = false\r\n    this.isSmooth = syncTouch || smoothWheel || smoothTouch\r\n    this.isScrolling = false\r\n    this.targetScroll = this.animatedScroll = this.actualScroll\r\n\r\n    this.options.wrapper.addEventListener('scroll', this.onNativeScroll, {\r\n      passive: false,\r\n    })\r\n\r\n    this.virtualScroll = new VirtualScroll(eventsTarget, {\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n      normalizeWheel,\r\n    })\r\n    this.virtualScroll.on('scroll', this.onVirtualScroll)\r\n  }\r\n\r\n  destroy() {\r\n    this.emitter.destroy()\r\n\r\n    this.options.wrapper.removeEventListener('scroll', this.onNativeScroll, {\r\n      passive: false,\r\n    })\r\n\r\n    this.virtualScroll.destroy()\r\n    this.dimensions.destroy()\r\n\r\n    this.toggleClass('lenis', false)\r\n    this.toggleClass('lenis-smooth', false)\r\n    this.toggleClass('lenis-scrolling', false)\r\n    this.toggleClass('lenis-stopped', false)\r\n    this.toggleClass('lenis-locked', false)\r\n  }\r\n\r\n  on(event, callback) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  off(event, callback) {\r\n    return this.emitter.off(event, callback)\r\n  }\r\n\r\n  setScroll(scroll) {\r\n    // apply scroll value immediately\r\n    if (this.isHorizontal) {\r\n      this.rootElement.scrollLeft = scroll\r\n    } else {\r\n      this.rootElement.scrollTop = scroll\r\n    }\r\n  }\r\n\r\n  onVirtualScroll = ({ deltaX, deltaY, event }) => {\r\n    // keep zoom feature\r\n    if (event.ctrlKey) return\r\n\r\n    const isTouch = event.type.includes('touch')\r\n    const isWheel = event.type.includes('wheel')\r\n\r\n    if (\r\n      (this.options.gestureOrientation === 'both' &&\r\n        deltaX === 0 &&\r\n        deltaY === 0) || // \"touchend\" events prevents \"click\"\r\n      (this.options.gestureOrientation === 'vertical' && deltaY === 0) || // trackpad previous/next page gesture\r\n      (this.options.gestureOrientation === 'horizontal' && deltaX === 0) ||\r\n      (isTouch &&\r\n        this.options.gestureOrientation === 'vertical' &&\r\n        this.scroll === 0 &&\r\n        !this.options.infinite &&\r\n        deltaY <= 0) // touch pull to refresh\r\n    )\r\n      return\r\n\r\n    // catch if scrolling on nested scroll elements\r\n    let composedPath = event.composedPath()\r\n    composedPath = composedPath.slice(0, composedPath.indexOf(this.rootElement)) // remove parents elements\r\n\r\n    if (\r\n      !!composedPath.find(\r\n        (node) =>\r\n          node.hasAttribute?.('data-lenis-prevent') ||\r\n          (isTouch && node.hasAttribute?.('data-lenis-prevent-touch')) ||\r\n          (isWheel && node.hasAttribute?.('data-lenis-prevent-wheel')) ||\r\n          node.classList?.contains('lenis') // nested lenis instance\r\n      )\r\n    )\r\n      return\r\n\r\n    if (this.isStopped || this.isLocked) {\r\n      event.preventDefault()\r\n      return\r\n    }\r\n\r\n    this.isSmooth =\r\n      ((this.options.smoothTouch || this.options.syncTouch) && isTouch) ||\r\n      (this.options.smoothWheel && isWheel)\r\n\r\n    if (!this.isSmooth) {\r\n      this.isScrolling = false\r\n      this.animate.stop()\r\n      return\r\n    }\r\n\r\n    event.preventDefault()\r\n\r\n    let delta = deltaY\r\n    if (this.options.gestureOrientation === 'both') {\r\n      delta = Math.abs(deltaY) > Math.abs(deltaX) ? deltaY : deltaX\r\n    } else if (this.options.gestureOrientation === 'horizontal') {\r\n      delta = deltaX\r\n    }\r\n\r\n    const syncTouch = isTouch && this.options.syncTouch\r\n    const isTouchEnd = isTouch && event.type === 'touchend'\r\n    const hasTouchInertia = isTouchEnd && Math.abs(delta) > 1\r\n    if (hasTouchInertia) {\r\n      delta = this.velocity * this.options.touchInertiaMultiplier\r\n    }\r\n\r\n    this.scrollTo(this.targetScroll + delta, {\r\n      programmatic: false,\r\n      ...(syncTouch && {\r\n        lerp: hasTouchInertia\r\n          ? this.syncTouchLerp\r\n          : this.options.__iosNoInertiaSyncTouchLerp,\r\n      }),\r\n    })\r\n  }\r\n\r\n  resize() {\r\n    this.dimensions.resize()\r\n  }\r\n\r\n  emit() {\r\n    this.emitter.emit('scroll', this)\r\n  }\r\n\r\n  onNativeScroll = () => {\r\n    if (this.__preventNextScrollEvent) return\r\n\r\n    if (!this.isScrolling) {\r\n      const lastScroll = this.animatedScroll\r\n      this.animatedScroll = this.targetScroll = this.actualScroll\r\n      this.velocity = 0\r\n      this.direction = Math.sign(this.animatedScroll - lastScroll)\r\n      this.emit()\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.isLocked = false\r\n    this.isScrolling = false\r\n    this.animatedScroll = this.targetScroll = this.actualScroll\r\n    this.velocity = 0\r\n    this.animate.stop()\r\n  }\r\n\r\n  start() {\r\n    this.isStopped = false\r\n\r\n    this.reset()\r\n  }\r\n\r\n  stop() {\r\n    this.isStopped = true\r\n    this.animate.stop()\r\n\r\n    this.reset()\r\n  }\r\n\r\n  raf(time) {\r\n    const deltaTime = time - (this.time || time)\r\n    this.time = time\r\n\r\n    this.animate.advance(deltaTime * 0.001)\r\n  }\r\n\r\n  scrollTo(\r\n    target,\r\n    {\r\n      offset = 0,\r\n      immediate = false,\r\n      lock = false,\r\n      duration = this.options.duration,\r\n      easing = this.options.easing,\r\n      lerp = !duration && this.options.lerp,\r\n      onComplete = null,\r\n      force = false, // scroll even if stopped\r\n      programmatic = true, // called from outside of the class\r\n    } = {}\r\n  ) {\r\n    if ((this.isStopped || this.isLocked) && !force) return\r\n\r\n    // keywords\r\n    if (['top', 'left', 'start'].includes(target)) {\r\n      target = 0\r\n    } else if (['bottom', 'right', 'end'].includes(target)) {\r\n      target = this.limit\r\n    } else {\r\n      let node\r\n\r\n      if (typeof target === 'string') {\r\n        // CSS selector\r\n        node = document.querySelector(target)\r\n      } else if (target?.nodeType) {\r\n        // Node element\r\n        node = target\r\n      }\r\n\r\n      if (node) {\r\n        if (this.options.wrapper !== window) {\r\n          // nested scroll offset correction\r\n          const wrapperRect = this.options.wrapper.getBoundingClientRect()\r\n          offset -= this.isHorizontal ? wrapperRect.left : wrapperRect.top\r\n        }\r\n\r\n        const rect = node.getBoundingClientRect()\r\n\r\n        target =\r\n          (this.isHorizontal ? rect.left : rect.top) + this.animatedScroll\r\n      }\r\n    }\r\n\r\n    if (typeof target !== 'number') return\r\n\r\n    target += offset\r\n    target = Math.round(target)\r\n\r\n    if (this.options.infinite) {\r\n      if (programmatic) {\r\n        this.targetScroll = this.animatedScroll = this.scroll\r\n      }\r\n    } else {\r\n      target = clamp(0, target, this.limit)\r\n    }\r\n\r\n    if (immediate) {\r\n      this.animatedScroll = this.targetScroll = target\r\n      this.setScroll(this.scroll)\r\n      this.reset()\r\n      onComplete?.(this)\r\n      return\r\n    }\r\n\r\n    if (!programmatic) {\r\n      if (target === this.targetScroll) return\r\n\r\n      this.targetScroll = target\r\n    }\r\n\r\n    this.animate.fromTo(this.animatedScroll, target, {\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      onStart: () => {\r\n        // started\r\n        if (lock) this.isLocked = true\r\n        this.isScrolling = true\r\n      },\r\n      onUpdate: (value, completed) => {\r\n        this.isScrolling = true\r\n\r\n        // updated\r\n        this.velocity = value - this.animatedScroll\r\n        this.direction = Math.sign(this.velocity)\r\n\r\n        this.animatedScroll = value\r\n        this.setScroll(this.scroll)\r\n\r\n        if (programmatic) {\r\n          // wheel during programmatic should stop it\r\n          this.targetScroll = value\r\n        }\r\n\r\n        if (!completed) this.emit()\r\n\r\n        if (completed) {\r\n          this.reset()\r\n          this.emit()\r\n          onComplete?.(this)\r\n\r\n          // avoid emitting event twice\r\n          this.__preventNextScrollEvent = true\r\n          requestAnimationFrame(() => {\r\n            delete this.__preventNextScrollEvent\r\n          })\r\n        }\r\n      },\r\n    })\r\n  }\r\n\r\n  get rootElement() {\r\n    return this.options.wrapper === window\r\n      ? document.documentElement\r\n      : this.options.wrapper\r\n  }\r\n\r\n  get limit() {\r\n    return this.dimensions.limit[this.isHorizontal ? 'x' : 'y']\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.options.orientation === 'horizontal'\r\n  }\r\n\r\n  get actualScroll() {\r\n    // value browser takes into account\r\n    return this.isHorizontal\r\n      ? this.rootElement.scrollLeft\r\n      : this.rootElement.scrollTop\r\n  }\r\n\r\n  get scroll() {\r\n    return this.options.infinite\r\n      ? modulo(this.animatedScroll, this.limit)\r\n      : this.animatedScroll\r\n  }\r\n\r\n  get progress() {\r\n    // avoid progress to be NaN\r\n    return this.limit === 0 ? 1 : this.scroll / this.limit\r\n  }\r\n\r\n  get isSmooth() {\r\n    return this.__isSmooth\r\n  }\r\n\r\n  set isSmooth(value) {\r\n    if (this.__isSmooth !== value) {\r\n      this.__isSmooth = value\r\n      this.toggleClass('lenis-smooth', value)\r\n    }\r\n  }\r\n\r\n  get isScrolling() {\r\n    return this.__isScrolling\r\n  }\r\n\r\n  set isScrolling(value) {\r\n    if (this.__isScrolling !== value) {\r\n      this.__isScrolling = value\r\n      this.toggleClass('lenis-scrolling', value)\r\n    }\r\n  }\r\n\r\n  get isStopped() {\r\n    return this.__isStopped\r\n  }\r\n\r\n  set isStopped(value) {\r\n    if (this.__isStopped !== value) {\r\n      this.__isStopped = value\r\n      this.toggleClass('lenis-stopped', value)\r\n    }\r\n  }\r\n\r\n  get isLocked() {\r\n    return this.__isLocked\r\n  }\r\n\r\n  set isLocked(value) {\r\n    if (this.__isLocked !== value) {\r\n      this.__isLocked = value\r\n      this.toggleClass('lenis-locked', value)\r\n    }\r\n  }\r\n\r\n  get className() {\r\n    let className = 'lenis'\r\n    if (this.isStopped) className += ' lenis-stopped'\r\n    if (this.isLocked) className += ' lenis-locked'\r\n    if (this.isScrolling) className += ' lenis-scrolling'\r\n    if (this.isSmooth) className += ' lenis-smooth'\r\n    return className\r\n  }\r\n\r\n  toggleClass(name, value) {\r\n    this.rootElement.classList.toggle(name, value)\r\n    this.emitter.emit('className change', this)\r\n  }\r\n}\r\n"],
  "mappings": "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",
  "names": ["clamp", "min", "input", "max", "Math", "Animate", "advance", "deltaTime", "_this$onUpdate", "this", "isRunning", "completed", "lerp", "value", "x", "y", "to", "t", "exp", "round", "currentTime", "linearProgress", "duration", "easedProgress", "easing", "from", "onUpdate", "call", "stop", "fromTo", "onStart", "Dimensions", "constructor", "wrapper", "content", "autoResize", "resize", "onWrapperResize", "onContentResize", "window", "width", "innerWidth", "height", "innerHeight", "clientWidth", "clientHeight", "scrollHeight", "scrollWidth", "callback", "delay", "timer", "args", "arguments", "context", "clearTimeout", "setTimeout", "apply", "wrapperResizeObserver", "ResizeObserver", "observe", "contentResizeObserver", "destroy", "_this$wrapperResizeOb", "_this$contentResizeOb", "disconnect", "limit", "Emitter", "events", "emit", "event", "callbacks", "i", "length", "on", "cb", "_this$events$event", "push", "_this$events$event2", "filter", "off", "_this$events$event3", "VirtualScroll", "element", "wheelMultiplier", "touchMultiplier", "normalizeWheel", "onTouchStart", "clientX", "clientY", "targetTouches", "touchStart", "lastDelta", "onTouchMove", "deltaX", "deltaY", "emitter", "onTouchEnd", "onWheel", "addEventListener", "passive", "removeEventListener", "Lenis", "document", "documentElement", "wheelEventsTarget", "eventsTarget", "smoothWheel", "smoothTouch", "syncTouch", "syncTouchLerp", "__iosNoInertiaSyncTouchLerp", "touchInertiaMultiplier", "pow", "infinite", "orientation", "gestureOrientation", "onVirtualScroll", "ctrlKey", "isTouch", "type", "includes", "isWheel", "options", "scroll", "composedPath", "slice", "indexOf", "rootElement", "find", "node", "_node$classList", "hasAttribute", "classList", "contains", "isStopped", "isLocked", "preventDefault", "isSmooth", "isScrolling", "animate", "delta", "abs", "hasTouchInertia", "velocity", "scrollTo", "targetScroll", "_extends", "programmatic", "onNativeScroll", "__preventNextScrollEvent", "lastScroll", "animatedScroll", "actualScroll", "direction", "sign", "lenisVersion", "body", "dimensions", "toggleClass", "virtualScroll", "setScroll", "isHorizontal", "scrollLeft", "scrollTop", "reset", "start", "raf", "time", "target", "offset", "immediate", "lock", "onComplete", "force", "_target", "querySelector", "nodeType", "wrapperRect", "getBoundingClientRect", "left", "top", "rect", "requestAnimationFrame", "d", "progress", "__isSmooth", "__isScrolling", "__isStopped", "__isLocked", "className", "name", "toggle"]
}
